library(tidyverse)
library(readxl)
library(sf)
data <- "~/GitHub/Data Class I/data-2-final-project/data"
# Download
discipline <- "https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/metrics/misconduct_report_police_and_expulsion_thru_eoy_2022_school_level.xlsx"
file.discipline <- str_c(data, "/discipline.xlsx")
download.file(discipline, file.discipline, method = "curl")
yrs <- 2021:2013
race <- c(
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_racialethnic_2022_v10272021.xls", #2021
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_racialethnic_2021_v10072020.xls", #2020
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_racialethnic_2020.xls", #2019
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_racialethnic_2019.xls", #2018
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_racialethnic_2018.xls", #2017
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_racialethnic_2017.xls", #2016
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/fy16_student_racial_ethnic_report_20151023.xls", #2015
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/fy15_racial_ethnic_survey.xls", #2014
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/fy14_racial_ethnic_survey.xls" #2013
)
lepsed <- c(
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_lepsped_2022_v10272021.xls", #2021
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_lepsped_2021_v10072020.xls", #2020
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_lepsped_2020_10202020.xls", #2019
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_lepsped_2019_10202020.xls", #2018
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_lepsped_2018_10202020.xls", #2017
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_lepsped_2017_10202020.xls", #2016
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/lep_sped_frl_report_2016_20151023.xls", #2015
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/demographics_lepsped_2015.xls", #2014
"https://www.cps.edu/globalassets/cps-pages/about-cps/district-data/demographics/lep_iep_frl_report_2014.xls" #2013
)
for(i in 1:9) {
download.file(race[i], str_c(data, "/race", yrs[i], ".xls"), method = "curl")
download.file(lepsed[i], str_c(data, "/lepsed", yrs[i], ".xls"), method = "curl")
}
# Cleaning
setwd(data)
discipline <- read_xlsx("discipline.xlsx", sheet = "School Level Behavior Data")
discipline <- discipline %>% filter(`Time Period` == "EOY")
discipline <- discipline[c(1, 4, 6, 10, 29)]
names(discipline) <- c("id", "year", "misconducts", "suspensions", "expelled")
schoolyrs <- c("2021-2022", "2020-2021", "2019-2020", "2018-2019", "2017-2018", "2016-2017", "2015-2016", "2014-2015", "2013-2014")
race_names <- c("id", "total", "white", "african_american", "hispanic", "asian")
racedata <- c()
for(i in c(1:4, 6)) {
racedata[[i]] <- read_xls(str_c("race", yrs[i], ".xls"), sheet = "Schools", skip = 1)
racedata[[i]] <- racedata[[i]][c(2, 4, 5, 7, 13, 17)]
names(racedata[[i]]) <- race_names
racedata[[i]] <- racedata[[i]][-c(1),]
racedata[[i]]$year <- schoolyrs[i]
}
for(i in 5) {
racedata[[i]] <- read_xls(str_c("race", yrs[i], ".xls"), sheet = "Schools", skip = 1)
racedata[[i]] <- racedata[[i]][c(1, 4, 5, 7, 13, 17)]
names(racedata[[i]]) <- race_names
racedata[[i]] <- racedata[[i]][-c(1),]
racedata[[i]]$year <- schoolyrs[i]
}
for(i in 7:9) {
racedata[[i]] <- read_xls(str_c("race", yrs[i], ".xls"), sheet = "Educational Units", skip = 1)
racedata[[i]] <- racedata[[i]][c(2, 4, 5, 7, 13, 17)]
names(racedata[[i]]) <- race_names
racedata[[i]] <- racedata[[i]][-c(1),]
racedata[[i]]$year <- schoolyrs[i]
}
race_all <- data.frame()
for(i in 1:9) {
race_all <- rbind(race_all, racedata[[i]])
}
lepsed_names <- c("id", "total", "bilingual", "sped", "econ")
lepseddata <- c()
for(i in 1:6) {
lepseddata[[i]] <- read_xls(str_c("lepsed", yrs[i], ".xls"), sheet = "Schools", skip = 1)
lepseddata[[i]] <- lepseddata[[i]][c(2, 4, 5, 7, 9)]
names(lepseddata[[i]]) <- lepsed_names
lepseddata[[i]] <- lepseddata[[i]][-c(1),]
lepseddata[[i]]$year <- schoolyrs[i]
}
for(i in 7) {
lepseddata[[i]] <- read_xls(str_c("lepsed", yrs[i], ".xls"), sheet = "All Schools", skip = 1)
lepseddata[[i]] <- lepseddata[[i]][c(2, 4, 5, 7, 9)]
names(lepseddata[[i]]) <- lepsed_names
lepseddata[[i]] <- lepseddata[[i]][-c(1),]
lepseddata[[i]]$year <- schoolyrs[i]
}
for(i in 8:9) {
lepseddata[[i]] <- read_xls(str_c("lepsed", yrs[i], ".xls"), sheet = "All Schools", skip = 1)
lepseddata[[i]] <- lepseddata[[i]][c(1, 4, 5, 7, 9)]
names(lepseddata[[i]]) <- lepsed_names
lepseddata[[i]] <- lepseddata[[i]][-c(1),]
lepseddata[[i]]$year <- schoolyrs[i]
}
lepsed_all <- data.frame()
for(i in 1:9) {
lepsed_all <- rbind(lepsed_all, lepseddata[[i]])
}
lepsedrace <- inner_join(lepsed_all, race_all, by = c("id", "year", "total"))
merged <- inner_join(lepsedrace, discipline, by = c("id", "year"))
merged[is.na(merged)] <- 0
merged$bilingual_pct <- merged$bilingual / merged$total
merged$sped_pct <- merged$sped / merged$total
merged$econ_pct <- merged$econ / merged$total
merged$white_pct <- merged$white / merged$total
merged$african_american_pct <- merged$african_american / merged$total
merged$hispanic_pct <- merged$hispanic / merged$total
merged$asian_pct <- merged$asian / merged$total
merged$misconducts <- as.numeric(merged$misconducts)
merged$suspensions <- as.numeric(merged$suspensions)
merged$expelled <- as.numeric(merged$expelled)
merged <- merged %>% drop_na() # The NA rows are Charter schools, which aren't a part of our question
merged$misconducts_percap <- merged$misconducts / merged$total
merged$suspensions_percap <- merged$suspensions / merged$total
merged$expelled_percap <- merged$expelled / merged$total
setwd("~/GitHub/Data Class I/data-2-final-project/schools")
schools <- c()
schools[[1]] <- read_csv("Chicago_Public_Schools_-_School_Locations_SY2122.csv")
schools[[2]] <- read_csv("Chicago_Public_Schools_-_School_Locations_SY2021.csv")
schools[[3]] <- read_csv("Chicago_Public_Schools_-_School_Locations_SY1920.csv")
schools[[4]] <- read_csv("School_Locations_1819.csv")
schools[[5]] <- read_csv("School_Locations_SY1718.csv")
schools[[6]] <- read_csv("CPS_School_Locations_1617.csv")
schools[[7]] <- read_csv("CPS_School_Locations_SY1516.csv")
schools[[8]] <- read_csv("CPS_School_Locations_SY1415.csv")
schools[[9]] <- read_csv("Units2013_14.csv")
schools_all <- data.frame()
for(i in c(1, 2, 7)) {
colnames(schools[[i]])[6] <- "Y"
colnames(schools[[i]])[7] <- "X"
}
for(i in 5:6) {
colnames(schools[[i]])[10] <- "Y"
colnames(schools[[i]])[11] <- "X"
}
schools[[4]] <- separate(schools[[4]], the_geom, into = c("point", "X", "Y"), sep = " ")
schools[[4]]$X <- gsub("[(]", "", schools[[4]]$X)
schools[[4]]$Y <- gsub("[)]", "", schools[[4]]$Y)
colnames(schools[[8]])[2] <- "School_ID"
colnames(schools[[9]])[1] <- "School_ID"
colnames(schools[[8]])[5] <- "Grade_Cat"
colnames(schools[[9]])[5] <- "Grade_Cat"
schools_all <- data.frame()
for(i in 1:9) {
schools[[i]]$year <- schoolyrs[i]
schools[[i]] <- schools[[i]] %>% select(X, Y, School_ID, year, Grade_Cat)
}
for(i in 1:9) {
schools_all <- rbind(schools_all, schools[[i]])
}
colnames(schools_all)[3] <- "id"
schools_all$id <- as.character(schools_all$id)
merged <- inner_join(merged, schools_all, by = c("id", "year"))
merged <- st_as_sf(merged, coords = c("X", "Y"), crs = 4269)
merged$Grade_Cat[merged$Grade_Cat == "MS"] <- "ES"
merged_ES <- merged %>% filter(Grade_Cat == "ES")
merged_HS <- merged %>% filter(Grade_Cat == "HS")
setwd("~/GitHub/Data Class I/data-2-final-project")
unzip("cityboundary.zip")
city <- st_read("cityboundary.shp")
runApp()
library(tidyverse)
library(ggplot2)
library(plotly)
library(sf)
library(shiny)
library(rlang)
ui <- fluidPage(
fluidRow(
column(6, h2("Elementary School")),
column(6, h2("High School"))
),
fluidRow(
column(6,
selectInput(
inputId = "factor_ES",
label = "Demographic",
choices = c(
"White",
"Black",
"Hispanic (non-white)",
"Asian",
"Bilignual",
"Special Education",
"Low Income"
)
),
),
column(6,
selectInput(
inputId = "factor_HS",
label = "Display based on what demographic data",
choices = c(
"White",
"Black",
"Hispanic (non-white)",
"Asian",
"Bilignual",
"Special Education",
"Low Income"
)
),
)
),
fluidRow(
column(6,
selectInput(
inputId = "outcome_ES",
label = "Type of Discipline",
choices = c(
"Misconducts",
"Suspensions",
"Expulsions"
)
)
),
column(6,
selectInput(
inputId = "outcome_HS",
label = "What type of Discipline outcome?",
choices = c(
"Misconducts",
"Suspensions",
"Expulsions"
)
)
)
),
fluidRow(
column(6,
selectInput(
inputId = "year_ES",
label = "Year",
choices = schoolyrs
)
),
column(6,
selectInput(
inputId = "year_HS",
label = "What year data do you wish to see",
choices = schoolyrs
)
)
),
fluidRow(
column(6,
plotlyOutput("elem")
),
column(6,
plotlyOutput("high")
)
),
fluidRow(
column(6, plotOutput("elem_static")),
column(6, plotOutput("high_static"))
)
)
server <- function(input, output) {
#Source: https://rstudio-pubs-static.s3.amazonaws.com/646750_c7b8cb026d154c3f810b6c15c5a41258.html#341_Make_the_table_interactive
yearInput_ES <- reactive({
merged_ES %>% filter(year == input$year_ES)
})
factorInput_ES <- reactive({
switch(input$factor_ES,
"White" = yearInput_ES()$white_pct,
"Black" = yearInput_ES()$african_american_pct,
"Hispanic (non-white)" = yearInput_ES()$hispanic_pct,
"Asian" = yearInput_ES()$asian_pct,
"Bilignual" = yearInput_ES()$bilingual_pct,
"Special Education" = yearInput_ES()$sped_pct,
"Low Income" = yearInput_ES()$econ_pct
)
})
outcomeInput_ES <- reactive({
switch(
input$outcome_ES,
"Misconducts" = yearInput_ES()$misconducts_percap,
"Suspensions" = yearInput_ES()$suspensions_percap,
"Expulsions" = yearInput_ES()$expelled_percap
)
})
yearInput_HS <- reactive({
merged_HS %>% filter(year == input$year_HS)
})
factorInput_HS <- reactive({
switch(input$factor_HS,
"White" = yearInput_HS()$white_pct,
"Black" = yearInput_HS()$african_american_pct,
"Hispanic (non-white)" = yearInput_HS()$hispanic_pct,
"Asian" = yearInput_HS()$asian_pct,
"Bilignual" = yearInput_HS()$bilingual_pct,
"Special Education" = yearInput_HS()$sped_pct,
"Low Income" = yearInput_HS()$econ_pct
)
})
outcomeInput_HS <- reactive({
switch(
input$outcome_HS,
"Misconducts" = yearInput_HS()$misconducts_percap,
"Suspensions" = yearInput_HS()$suspensions_percap,
"Expulsions" = yearInput_HS()$expelled_percap
)
})
output$elem <- renderPlotly({
schools_ES <- ggplot() +
geom_sf(city, mapping = aes(geometry = geometry)) +
geom_sf(yearInput_ES(), mapping = aes(geometry = geometry, color = factorInput_ES(), size = outcomeInput_ES())) +
guides(color = guide_colorbar(title = input$factor_ES)) +
theme(legend.position = "bottom") +
theme_void() +
labs(
title = "Elementary Schools"
)
ggplotly(schools_ES)
})
output$high <- renderPlotly({
schools_HS <- ggplot() +
geom_sf(city, mapping = aes(geometry = geometry)) +
geom_sf(yearInput_HS(), mapping = aes(geometry = geometry, color = factorInput_HS(), size = outcomeInput_HS())) +
guides(color = guide_colorbar(title = input$factor_HS)) +
theme(legend.position = "bottom") +
theme_void() +
labs(
title = "High Schools"
)
ggplotly(schools_HS)
})
merged_yrs_ES <- merged_ES %>%
group_by(year) %>%
summarise(
white = mean(white_pct),
asian = mean(asian_pct),
african_american = mean(african_american_pct),
hispanic = mean(hispanic_pct)
) %>%
pivot_longer(
white:hispanic,
names_to = "race",
values_to = "pct"
)
output$elem_static <- renderPlot({
ES_plot <- ggplot(merged_yrs_ES, aes(x = year, y = pct, color = race)) +
geom_point() +
labs(
title = "CPS Elementary School Attendance Over Time",
x = "School Year",
y = "Proportion"
) +
scale_color_discrete(
name = "Race/Ethnicity",
labels = c("Black", "Asian", "Hispanic (non-White)", "White")
)
ES_plot
})
merged_yrs_HS <- merged_HS %>%
group_by(year) %>%
summarise(
white = mean(white_pct),
asian = mean(asian_pct),
african_american = mean(african_american_pct),
hispanic = mean(hispanic_pct)
) %>%
pivot_longer(
white:hispanic,
names_to = "race",
values_to = "pct"
)
output$high_static <- renderPlot({
HS_plot <- ggplot(merged_yrs_HS, aes(x = year, y = pct, color = race)) +
geom_point() +
labs(
title = "CPS High School Attendance Over Time",
x = "School Year",
y = "Proportion"
) +
scale_color_discrete(
name = "Race/Ethnicity",
labels = c("Black", "Asian", "Hispanic (non-White)", "White")
)
HS_plot
})
}
shinyApp(ui, server)
setwd("~/GitHub/Data Class I/data-2-final-project/images")
merged_yrs_ES <- merged_ES %>%
group_by(year) %>%
summarise(
white = mean(white_pct),
asian = mean(asian_pct),
african_american = mean(african_american_pct),
hispanic = mean(hispanic_pct)
) %>%
pivot_longer(
white:hispanic,
names_to = "race",
values_to = "pct"
)
ES_plot <- ggplot(merged_yrs_ES, aes(x = year, y = pct, color = race)) +
geom_point() +
labs(
title = "CPS Elementary School Attendance Over Time",
x = "School Year",
y = "Proportion"
) +
scale_color_discrete(
name = "Race/Ethnicity",
labels = c("Black", "Asian", "Hispanic (non-White)", "White")
)
ggsave("ES_plot.png", plot = ES_plot, device = "png")
merged_yrs_HS <- merged_HS %>%
group_by(year) %>%
summarise(
white = mean(white_pct),
asian = mean(asian_pct),
african_american = mean(african_american_pct),
hispanic = mean(hispanic_pct)
) %>%
pivot_longer(
white:hispanic,
names_to = "race",
values_to = "pct"
)
HS_plot <- ggplot(merged_yrs_HS, aes(x = year, y = pct, color = race)) +
geom_point() +
labs(
title = "CPS High School Attendance Over Time",
x = "School Year",
y = "Proportion"
) +
scale_color_discrete(
name = "Race/Ethnicity",
labels = c("Black", "Asian", "Hispanic (non-White)", "White")
)
ggsave("HS_plot.png", plot = HS_plot, device = "png")
library(tidyverse)
library(tidytext)
library(ggplot2)
setwd("~/GitHub/Data Class I/data-2-final-project")
# Code source: my submission for Question 1 of Homework 3
enroll <- read_file("enrollment.txt") # Source: https://chicago.chalkbeat.org/2022/9/28/23377565/chicago-school-enrollment-miami-dade-third-largest
enroll_df <- tibble(text = enroll)
word_tokens_enroll <- unnest_tokens(enroll_df, word_tokens, text, token = "words")
enroll_no_stop <- word_tokens_enroll %>%
anti_join(stop_words, by = c("word_tokens" = "word"))
enroll_no_stop_count <- count(enroll_no_stop, word_tokens, sort = T)
paste("The most common word is", enroll_no_stop_count[1,1])
paste("The median number of mentions of a word is", median(enroll_no_stop_count$n))
paste("The mean number of mentions of a word is", mean(enroll_no_stop_count$n))
enroll_short <- enroll_no_stop_count %>% head(20)
enroll_freq <- ggplot(data = enroll_short) +
geom_col(aes(x = word_tokens, y = n), fill = "blue") +
labs(
title = "Word Frequency - Enrollment",
x = "Words",
y = "Frequency"
)
police <- read_file("police.txt") # Source: https://chicago.chalkbeat.org/2022/8/16/23308391/chicago-public-schools-police-school-resource-officers-restorative-justice-whole-school-safety-plan
police_df <- tibble(text = police)
word_tokens_police <- unnest_tokens(police_df, word_tokens, text, token = "words")
police_no_stop <- word_tokens_police %>%
anti_join(stop_words, by = c("word_tokens" = "word"))
police_no_stop_count <- count(police_no_stop, word_tokens, sort = T)
paste("The most common word is", police_no_stop_count[1,1])
paste("The median number of mentions of a word is", median(police_no_stop_count$n))
paste("The mean number of mentions of a word is", mean(police_no_stop_count$n))
police_short <- police_no_stop_count %>% head(20)
police_freq <- ggplot(data = police_short) +
geom_col(aes(x = word_tokens, y = n), fill = "blue") +
labs(
title = "Word Frequency - Policing",
x = "Words",
y = "Frequency"
)
setwd("~/GitHub/Data Class I/data-2-final-project/images")
ggsave("enrollment_words.png", plot = enroll_freq, device = "png")
ggsave("policing_words.jpg", plot = police_freq, device = "png")
setwd("~/GitHub/Data Class I/data-2-final-project")
misconducts <- lm(misconducts_percap ~ white_pct + african_american_pct + asian_pct + hispanic_pct + bilingual_pct + sped_pct + econ_pct, data = merged)
summary(misconducts)
misconducts_race <- lm(misconducts_percap ~ white_pct + african_american_pct + asian_pct + hispanic_pct, data = merged)
summary(misconducts_race)
misconducts_econ <- lm(misconducts_percap ~ econ_pct, data = merged)
summary(misconducts_econ)
misconducts_sped <- lm(misconducts_percap ~ sped_pct, data = merged)
summary(misconducts_sped)
misconducts_bilingual <- lm(misconducts_percap ~ bilingual_pct, data = merged)
summary(misconducts_bilingual)
misconducts_year <- lm(misconducts_percap ~ year, data = merged)
summary(misconducts_year)
expelled <- lm(expelled_percap ~ white_pct + african_american_pct + asian_pct + hispanic_pct + bilingual_pct + sped_pct + econ_pct, data = merged)
summary(expelled)
expelled_race <- lm(expelled_percap ~ white_pct + african_american_pct + asian_pct + hispanic_pct, data = merged)
summary(expelled_race)
expelled_econ <- lm(expelled_percap ~ econ_pct, data = merged)
summary(expelled_econ)
expelled_sped <- lm(expelled_percap ~ sped_pct, data = merged)
summary(expelled_sped)
expelled_bilingual <- lm(expelled_percap ~ bilingual_pct, data = merged)
summary(expelled_bilingual)
expelled_year <- lm(expelled_percap ~ year, data = merged)
summary(expelled_year)
suspensions <- lm(suspensions_percap ~ white_pct + african_american_pct + asian_pct + hispanic_pct + bilingual_pct + sped_pct + econ_pct, data = merged)
summary(suspensions)
suspensions_race <- lm(suspensions_percap ~ white_pct + african_american_pct + asian_pct + hispanic_pct, data = merged)
summary(suspensions_race)
suspensions_econ <- lm(suspensions_percap ~ econ_pct, data = merged)
summary(suspensions_econ)
suspensions_sped <- lm(suspensions_percap ~ sped_pct, data = merged)
summary(suspensions_sped)
suspensions_bilingual <- lm(suspensions_percap ~ bilingual_pct, data = merged)
summary(suspensions_bilingual)
suspensions_year <- lm(suspensions_percap ~ year, data = merged)
summary(suspensions_year)
summary(lm(bilingual_pct ~ hispanic_pct + asian_pct + white_pct + african_american_pct, data = merged))
